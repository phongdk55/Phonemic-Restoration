import numpy as np
import os
import re
import math

input_dir = "/home/danglab/Features/Input/input.txt"
output_dir = "/home/danglab/Features/Output/output.txt"

def read_data(filename, num_features, *arg):   
    input_file = open(filename,'r')
    feature = np.zeros((num_features))
    features_arr = []
    factor_arr = []
    
    count = 0
    for line in input_file:
        count += 1
        if count > 10000:
            break
        sequential_number = line.split(" ")
        if len(arg) > 0:
            start = 1
            factor_arr.append(float(sequential_number[0]))
        else:
            start = 0 
        for i in xrange(start, num_features):
            try:
                feature[i] = (float(sequential_number[i]))
            except:
                continue
        features_arr.append(feature)
        
    if len(arg) > 0:
        return np.array(features_arr).astype(np.float32), np.array(factor_arr).astype(np.float32)
    return np.array(features_arr).astype(np.float32)
    
def load_data():
    input_data = read_data(input_dir, 108)
    output_data, factor_data = read_data(output_dir, 36, "True")
    print input_data.shape, output_data.shape
    return input_data, output_data, factor_data

input_arr = []
output_arr = []
#test_arr = []
#test_res_arr = []
#factors = []

def read_afile(filename, num_features, arr, *args ):
    input_file = open(filename,'r')
    cnt = False
    if len(args) > 1:
        cnt = True
    factors = -0
    for line in input_file:
        sequential_number = line.split(" ")
        if cnt:
            factors = float(sequential_number[0])
            cnt = False
            continue
        feature = np.zeros((num_features))
        for i in xrange(num_features):
            #print sequential_number[i]
            if math.isnan(float(sequential_number[i])):
                print line
                print "AAAAAAAAAAAAAAAAAAAAAAAAAAAA"
                exit() 
            try:
                feature[i] = (float(sequential_number[i]))                
            except:
                print "Error at reading - check it"
                exit()
        arr.append(feature)
    return factors

def read_features():
    feature_in_dir = '/home/danglab/Phong/norm/input_norm/'
    feature_out_dir = '/home/danglab/Phong/norm/output_norm/'
    
    count = 0
    listfile = sorted(os.listdir(feature_in_dir))
    for afile in listfile:
        read_afile(feature_in_dir + afile,109 , input_arr, "norm")
        #if count == 0:
            #break
        #count += 1      
              
    count = 0
    listfile_out = sorted(os.listdir(feature_out_dir))
    for afile in listfile_out:
        read_afile(feature_out_dir + afile, 13 + 24, output_arr)
        break
        #if count > 10:
        #    break
        #count += 1
    '''   
    listtest = sorted(os.listdir(test_dir))
    for afile in listtest:
        #print afile                 #usctimit_ema_f1_001_005_100ms_noise_in.txt
        read_afile(test_dir + afile, 109, test_arr)
        find_ = [m.start() for m in re.finditer('_', afile)]      
        file_mat = (afile.replace(afile[find_[4]:find_[6]],'')).replace('in.','out.')   #usctimit_ema_f1_001_005_out.txt
        read_afile(feature_out_dir + file_mat, 13 + 24, test_res_arr)
    '''
#     print factors
#     print input_arr[0]
#     a = np.array(input_arr).astype(np.float32)
#     print a.max(), a.min()
#     print np.argmin(a)
    return np.array(input_arr).astype(np.float32), np.array(output_arr).astype(np.float32)

#load_data()
#read_features()
